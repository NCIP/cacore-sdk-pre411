##################################################################################
#  PROJECT PROPERTIES
#
#  PROJECT_NAME: used to create/name: 
#		1) Output project directory folder name
#		2) Beans JAR file name
#		3) ORM JAR file name
#  		4) Client JAR file name
#		5) WAR file name
#		6) Web Service Namespace
#		7) Documentation title in the generated API (Javadocs)
#
#  NAMESPACE_PREFIX: used to create:
#		1) XSD's (Schema's) 
#		2) XML Mapping and Unmapping files.
#       3) Locate the UML Project in caDSR when adding Hibernate Validator
#          annotations in generated domain objects.  Use format:
#		   gme://<<Classification Scheme (UML Project ShortName)>>.<<Context>>/
#          <<Classification Scheme Version>>/<<<Classification Scheme Item> (Optional)>>
#
#  NOTE:  If XSDs are to be used for the caGRID, the value of the NAMESPACE_PREFIX 
#  should be the same as the GME namespace
# 
#  WEBSERVICE_NAME: used to create the:
#		1) Web service name in the Web Services deployment descriptor (WSDD). 
#		2) Web service URL, which uses the Web service name as a suffix 
#          (i.e., ${SERVER_URL}/services/${WEBSERVICE_NAME})
#
##################################################################################
PROJECT_NAME=example
NAMESPACE_PREFIX=gme://caCORE.caCORE/3.2/
WEBSERVICE_NAME=${PROJECT_NAME}Service

##################################################################################
#  PROJECT SECURITY PROPERTIES
#
#  CSM_PROJECT_NAME: used as a prefix when creating the:
#		1) CSM security configuration file name
#
#  NOTE:  CSM_PROJECT_NAME valued must  match the Application name used when
#         setting up security using CSM's UPT
#
#  ENABLE_INSTANCE_LEVEL_SECURITY: used to enable/disable CSM instance level security.
#  Only relevant if SECURITY_ENABLED property is set to 'true'.
#
#  ENABLE_ATTRIBUTE_LEVEL_SECURITY: used to enable/disable CSM attribute level
#  security.  Only relevant if SECURITY_ENABLED property is set to 'true'.
#
#  CACHE_PROTECTION_ELEMENTS: indicates whether or not CSM Protection Elements
#  should be cached
#
##################################################################################
ENABLE_SECURITY=false
CSM_PROJECT_NAME=${PROJECT_NAME}
ENABLE_INSTANCE_LEVEL_SECURITY=false
ENABLE_ATTRIBUTE_LEVEL_SECURITY=false
CACHE_PROTECTION_ELEMENTS=false

##################################################################################
#  WRITABLE API PROPERTIES
# 
#  ENABLE_WRITABLE_API_EXTENSION: if set to "true" or "yes", will change the
#  service interface and corresponding implementation for the Writable API
#
#  DATABASE_TYPE: A suffix appended to certain tag value keys (e.g., 
#  NCI_GENERATOR.<database-type>, NCI_GENERATOR_PROPERTY.<database-type>) added
#  to the primary key columns within the UML model.  The tag values are used by  
#  the Hibernate Mapping file transformer to generate primary key settings for a 
#  given class.  The database-type suffix is necessary when supporting multiple 
#  databases through the same UML model.
#
#  IDENTITY_GENERATOR_TAG:  if using system-wide primary key generator settings,
#  the value for the primary key generator class.
#
#  CADSR_CONNECTION_URL: if set, will override the default connection provided in 
#  the caDSR application-config-client.xml file, located under 
#  /conf/codegen/validator. Used when generating Hibernate Validator 
#  annotations containing caDSR Permissible Value enumeration(s) for a given 
#  domain object attribute.
#  
#  ENABLE_COMMON_LOGGING_MODULE:  if "yes" or "true", will enable the Common
#  Logging Module (CLM).  Only valid if the Writable API extension is enabled.
#
#  CLM_PROJECT_NAME: Value will be used to populated the CLM logging table 
#  (LOG_MESSAGE) application column. Only valid if CLM is enabled.
##################################################################################
ENABLE_WRITABLE_API_EXTENSION=false
DATABASE_TYPE=oracle
IDENTITY_GENERATOR_TAG=<generator class="assigned"/>
CADSR_CONNECTION_URL=http://cadsrapi.nci.nih.gov/cadsrapi40
ENABLE_COMMON_LOGGING_MODULE=true
CLM_PROJECT_NAME=${PROJECT_NAME}

################################################################################## 
#  APPLICATION SERVER PROPERTIES
#
#  SERVER_TYPE if set to jboss will exclude log4j.jar from the war file. 
#              Any other value will include the log4j.jar in the war file
##################################################################################
SERVER_TYPE=other
SERVER_URL=http://localhost:8080/${PROJECT_NAME}

################################################################################## 
#  MODEL PROPERTIES
#
#  MODEL_FILE: specifies the name of the file which contains the object/data  
#  model.  The file is to be placed under the models directory.
#
#  MODEL_FILE_TYPE: specifies whether the object/data model file was created
#  using Enterprise Architect (EA) or ArgoUML (ARGO).
#
#  LOGICAL_MODEL: specifies the name of the base package within the object/data 
#  model that contains the logical model data.
#
#  DATA_MODEL: specifies the name of the base package within the object/data model
#  that contains the data model data.
#
#  INCLUDE_PACKAGE: specifies the name pattern of the parent package within the 
#  object/data model that should be processed by the code generator.
#
#  EXCLUDE_PACKAGE: specifies the name pattern of the parent package within the 
#  object/data model that should be ignored (not processed) by the code generator.

#  EXCLUDE_NAME: specifies the name pattern of the class(es) within the object/
#  data model that should be ignored (not processed) by the code generator.
#
#  EXCLUDE_NAMESPACE: specifies the complete namespace of the UML Packages within the object/
#  data model that should be ignored (not processed) by the code generator.
#
#  NOTE:  At this time, the EXCLUDE_PACKAGE, EXCLUDE_NAME, EXCLUDE_NAMESPACE properties 
#         only work with a simple string containing one or more class/package name entries  
#         separated by a comma (",").  I.e., no wildcard or regular expressions 
#         are accepted/understood by the Code Generator parser.  Class/package  
#         names need to be fully qualified, and are also case-sensitive. 
# 
#         Also, classes cannot be excluded if they have an association to other 
#         class(es) that are not excluded, or if they are a parent class in a 
#         generalization (inheritance) relationship with other class(es) that are 
#         not excluded.
#
#         As an example, given the presence of the following classes within the UML 
#         model:
#
#             * gov.nih.nci.cacoresdk.domain.interfaze.Dog
#             * gov.nih.nci.cacoresdk.domain.inheritance.implicit.FreshwaterFishTank
#             * gov.nih.nci.cacoresdk.domain.inheritance.implicit.Fish
#
#         and the following deploy.properties EXCLUDE_NAME setting:
#
#             EXCLUDE_NAME=gov.nih.nci.cacoresdk.domain.interfaze.Dog,FreshwaterFishTank,
#             freshwaterfishtank,gov.nih.nci.cacoresdk.domain.inheritance.implicit.AngelFish
#
#         the SDK Code Generator would successfully exclude (skip generation of)
#         artifacts for the Dog and Fish classes, but would not exclude generation
#         of artifacts for the FreshwaterFishTank class as the first entry is not 
#         fully qualified, and the second entry is neither fully qualified, nor
#         does the case match.
#
##################################################################################
#MODEL_FILE=sdk.uml
#MODEL_FILE_TYPE=ARGO
MODEL_FILE=sdk.xmi
MODEL_FILE_TYPE=EA

LOGICAL_MODEL=Logical View.Logical Model
DATA_MODEL=Logical View.Data Model
INCLUDE_PACKAGE=domain
EXCLUDE_PACKAGE=
EXCLUDE_NAME=
EXCLUDE_NAMESPACE=

##################################################################################
#  DATABASE CONNECTION PROPERTIES
# 
#  USE_JNDI_BASED_CONNECTION:  If set to "true" or "yes", DB_JNDI_URL is used to   
#  obtain the connection and get data.  If set to "no" then DB_DRIVER,  
#  DB_CONNECTION_URL, DB_USERNAME and DB_PASSWORD are used instead to initialize 
#  the connection and get data.
#
#  DB_DIALECT: used by Hibernate to prepare database specific queries
#
#  CACHE_PATH: used by EHCache to store its cache files on disk
##################################################################################
USE_JNDI_BASED_CONNECTION=false
DB_JNDI_URL=java:/SDK

DB_CONNECTION_URL=
DB_USERNAME=
DB_PASSWORD=
DB_DRIVER=oracle.jdbc.driver.OracleDriver

DB_DIALECT=org.hibernate.dialect.OracleDialect

##################################################################################
#  SECURITY DATABASE CONNECTION PROPERTIES
#
#  USE_JNDI_BASED_CONNECTION:  If set to "true" or "yes" then DB_JNDI_URL is used  
#  to obtain  the connection and get data.  If set to "no" then DB_DRIVER,  
#  DB_CONNECTION_URL, DB_USERNAME and DB_PASSWORD are used instead to initialize  
#  the connection and get data.
#
#  CSM_DB_DIALECT: used by the Hibernate to prepare the database specific queries.
#
#  If you are using instance level security then the CSM tables are required to be 
#  present in the same schema the domain object resides in
##################################################################################
CSM_USE_JNDI_BASED_CONNECTION=${USE_JNDI_BASED_CONNECTION}
CSM_DB_JNDI_URL=${DB_JNDI_URL}

CSM_DB_CONNECTION_URL=${DB_CONNECTION_URL}
CSM_DB_USERNAME=${DB_USERNAME}
CSM_DB_PASSWORD=${DB_PASSWORD}
CSM_DB_DRIVER=${DB_DRIVER}

CSM_DB_DIALECT=${DB_DIALECT}

##################################################################################
#  LOGGING DATABASE CONNECTION PROPERTIES
#
##################################################################################
CLM_DB_CONNECTION_URL=${DB_CONNECTION_URL}
CLM_DB_USERNAME=${DB_USERNAME}
CLM_DB_PASSWORD=${DB_PASSWORD}
CLM_DB_DRIVER=${DB_DRIVER}

##################################################################################
##################################################################################
#  CODE GENERATION OPTIONS
##################################################################################
##################################################################################
#  The following properties are used to enable or disable code generation step(s). 
#  These properties accept values of either 'true' or 'false'. Setting the value 
#  to 'false' for a component disables the code generation of that component, while
#  setting the value to 'true' enables it
#
#  VALIDATE_LOGICAL_MODEL 	if enabled checks for the validity of the object model
#  VALIDATE_MODEL_MAPPING 	if enabled checks for the validity of the object to 
#                         	database mapping 
#  GENERATE_HIBERNATE_MAPPING if enabled generates Hibernate related artifacts
#  GENERATE_BEANS 			if enabled, generates Java beans from the object model
#  GENERATE_CASTOR_MAPPING 	if enabled, generates castor mapping files for the 
#                          	object model
#  GENERATE_XSD 			if enabled, generates the XSD and XML Mapping files
#  GENERATE_WSDD 			if enabled, generates the Web Services Deployment  
#                 			Descriptor (WSDD) file
#  GENERATE_HIBERNATE_VALIDATOR
#				 			if enabled, will generate Hibernate Validator  
#                 			annotations using caDSR Permissible Values to create
#							an enumeration of valid values.  Annotations are 
#							added during code generation to domain object
#							attributes.  At runtime, the value of domain object 
#							attributes containing annotations will be validated
#							prior to insert or update.  This setting is only
#							valid if the Writable API extension and security 
#							are enabled as well.
# GENERATE_XSD_WITH_GME_TAGS
#                           Whether or not GME Namespace tag values should be used
#							when generating Castor Mapping and XSD files.  For 
#							more information, see GME Namespace Wiki: 
#							https://wiki.nci.nih.gov/display/caCORE/GME+Namespace
##################################################################################
VALIDATE_LOGICAL_MODEL=true
VALIDATE_MODEL_MAPPING=true
VALIDATE_GME_TAGS=true
GENERATE_HIBERNATE_MAPPING=true
GENERATE_BEANS=true
GENERATE_CASTOR_MAPPING=true
GENERATE_XSD=true
GENERATE_XSD_WITH_GME_TAGS=false
GENERATE_WSDD=true
GENERATE_HIBERNATE_VALIDATOR=true
##################################################################################
#  ADVANCED PROPERTIES
#
#  CACHE_PATH: used by the EHCache to store its cache files on disk
#  java.io.tmpdir will create the cache files in the temporary directory. 
#  User can choose to specify any absolute path for the cache files
##################################################################################
CACHE_PATH=java.io.tmpdir