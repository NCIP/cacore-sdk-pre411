                        Release Notes
    
            caCORE Software Development Toolkit (SDK)
                          Version 3.2.1
                       March 22, 2007

       National Cancer Institute Center for Bioinformatics


================================================================
                            Contents
================================================================


    1.0 caCORE SDK Introduction
    2.0 Features and Updates
    3.0 Bug Fixes
    4.0 Known Issues
    5.0 Bug Reports and Support
    6.0 caCORE Open Development
    7.0 Documentation
    8.0 NCICB Web Pages


================================================================
	1.0 caCORE SDK Introduction and History
================================================================

    caCORE SDK 3.2.1

    --  22 March 2007

    caCORE SDK 3.2

    --  22 December 2006

    caCORE SDK 1.1

    --  27 March 2006

    caCORE SDK 1.0.3

    --  28 July 2005

    caCORE SDK 1.0.2

    --  12 April 2005

    caCORE SDK 1.0.1

    --  16 February 2005

    caCORE SDK 1.0

    --  31 January 2005

    The caCORE Software Development Kit (SDK) is a set of tools
    that can be used by an intermediate Java developer to create
    a 'caCORE-like' system. Such systems are constructed using
    certain design principles:

    --  UML Modeling

    --  n-tier architecture with open APIs

    --  controlled vocabularies

    --  registered metadata

    A system built along these lines is said to be 'semantically
    integrated', that is, there exists runtime metadata that
    describes every class and class attribute in the API.

    http://nci.nih.gov/pub/cacore/SDK/caCORE_SDK3.2.1_Programmers_Guide.pdf


================================================================
	2.0 Features and Updates
================================================================

    +---------------------------------------+
    | Features:  caCORE SDK Components      |
    +---------------------------------------+

    The caCORE SDK includes the following components:

    --  Sample UML object/data models to use with the development
	    kit:

	--  cacoretoolkit.eap
	--  SDKTestModel.eap

    --  XML Metadata Interchange (XMI) Version of the sample
	    models:

        --  cabioExampleModel.xmi
        --  sdk-test.xmi

    --  Framework packages

        --  gov.nih.nci.system
        --  gov.nih.nci.common
        --  org.hibernate

    --  Configuration files to enable you to customize your 
        installation to meet your specific database, server,
        and other network needs.

        --  deploy.properties
        --  download.properties

    --  Ant buildfile

    --  Code generator package

        --  gov.nih.nci.codegen.core
        --  gov.nih.nci.codegen.framework
        --  Java JET templates for generating caCORE like APIs

    --  MySQL database

    Please read the caCORE SDK Programmer's Guide before
    downloading the SDK.  

    http://nci.nih.gov/pub/cacore/SDK/caCORE_SDK3.2.1_Programmers_Guide.pdf


    +---------------------------------------+
    | Updates / New Features                |
    +---------------------------------------+

    --  Allow users to use security in the SDK generated Thick client.
    	Enhancements have been made to the caCORE SDK to securely 
		allow multiple users within the same web application to issue
		requests that invoke method calls on the ApplicationService 
		class while security is enabled.  Previously, with security
		enabled, the SDK generated application was capable of only
		handling one user reques at a time.  If two or more users 
		issue a request, the request is made with the first 
		user’s credentials since the ApplicationService is a singleton.  
		The code has been modified to allow multiple users issuing 
		requests to issue requests that use a user's respective 
		credentials.

     -- Upgrade the caCORE SDK to utilize CSM version 3.2.
     	Previously, the CSM/SDK and CSM/caGrid Integration used a 
     	beta version of the CSM v3.2 release. There have been many 
     	new features added to the CSM v3.2 since this beta version. 
     	However, these new features cannot be leveraged by the caGrid  
     	client.  Thus, in order to make these new features available, the 
     	CSM/SDK and CSM/caGrid integrations have been updated to use 
     	the 3.2 version of CSM. The feature that has been utilized as 
     	part of this requirement is the new installation/configuration 
     	process that has been introduced in CSM 3.2, which facilitates  
     	ease of installation of a CSM enabled SDK generated system. 
     	The new CSM installation procedures are detailed in the CSM 
     	3.2 Application Developer’s Guide.
     	
     --	Make CSM Authentication configurable.
     	The CSM integration within the caCORE SDK has been made configurable 
		to allow the authentication service to be turned off or on.  When 
		the authentication service is turned off, CSM will generate a user 
		session token without authenticating the user.  Turning  
		authentication on or off does not require users to regenerate the code.

	 -- Include information entered as tag values in the model in the javadocs 
	 	generated by the caCORE SDK.  In order to reduce the caCORE SDK user 
	 	work load and data re-entry, the caCORE SDK now takes the text written 
	 	in the documentation and description tags in the input XMI used for 
	 	code generation, and adds it to the javadocs of the beans created by the 
	 	SDK.  The caCORE SDK will annotate the attributes of the Java beans with 
	 	semantic information present in the UML model.
	 	
	 -- Integrate Castor related work performed on the SDK 3.1 branch into SDK v3.2.1
	 	During caCORE SDK 3.2 development, on request from the caGRID team, work 
	 	was performed to process model associations using Castor. This required 
	 	changes in the castor mapping file generator as well as changes in the 
	 	serializer/deserializer program (XMLUtility). These modification have 
	 	been merged into the caCORE SDK 3.2.1 codebase.
	 	
	 -- Provide an option in the SDK build script to only generate POJO beans, 
	 	XSDs, and Castor Mappings based on the input XMI.
	 	In lieu of creating an entire system, the build script now provides an
	 	option as an Ant task to only generate Plain Old Java Object (POJO) 
	 	beans, and corresponding XSDs and Castor mappings.

================================================================
	3.0 Bug Fixes Since Last Release
================================================================

    --  In caCORE SDK version 3.2, a defect was found that caused 
		Hibernate to perform multiple sub-select statements during
		nested criteria queries which results in performance degradation.
		This defect is now fixed as part of the caCORE SDK 3.2.1 release.





================================================================
	4.0 Known Issues
================================================================


    --  The caCORE SDK does not support ordered collections.

    --  The UML Loader is not included in the caCORE SDK
	Version 3.2. The NCICB will load semantically
	annotated XMI files for users (see the Developers Guide
	for details).

    --  The SDK will not generate java beans for primitive data
	types

    --  The automated download of Tomcat and MySQL can fail if
	the download mirror sites and backup sites change or are
	down. In the event of this happening you may need to
	modify the relevant properties in
	/conf/download.properties

    --  When building a system, an error will be generated if
	Java keywords are used as class and attribute names in
	the UML logical model.  Similarly, SQL keywords in the
	data model will generate errors.
   
    --  If you use multiple datasources from different databases
	servers, the toolkit will not be able to generate
	multiple orm*.cfg.xml files automatically. You will need
	to generate a single ORM, then manually split that file
	into however many ORM's you are using.

    --  The HTTP interface has reserved characters like % and #.
	If the reserved characters are part of the query, the
	HTTP parser will not work correctly.
	
	Example:
	"test%122".  

	A workaround is to use the wild card character '*':

	Example: 
	"test*122"

    --  Web Services generates queries based on the attribute
	values of the criteria object. If the attribute is an
	association, the value for the association is ignored.
	This includes one-to-one, one-to-many, many-to-many or 
	many-to-one relationships.

	Example: 
	  Gene gene = new Gene(); 
	  Taxon taxon = new Taxon(); 
	  taxon.setId(new Long(5)); 
	  gene.setTaxon(taxon); 
	  Object[] resultList = (Object[])call.invoke(new Object[] 
		{ "gov.nih.nci.cabio.domain.ws.Gene", gene }); 

	This method will return all the Genes from the database.
	The Taxon value attribute of the Gene will be ignored.

    --  The HBM files generated using the caCORE SDK does not
	have any cascade properties set. As a result, the
	writeable operations are only performed on the the
	parent object and are not propagated to the child
	objects. However the child objects can be created
	separately and linked to the parent objects while
	saving the parent object. Also the child objects can
	be updated seperately. In the case of delete, the child
	object needs to be deleted separetely. At the same time
	the association with the parent object needs to removed
	and the parent object needs to be updated to reflect
	the same.

    --  Those developers who do not wish have the SDK generate
	Hibernate OR mapping files should uncomment the
	following line in the build-custom.properties file
	contained within the base directory of the SDK.
	Likewise, other properties can be toggled in order to
	control the execution of the various ANT targets
	contained within the build file.

	#generate-OR-mapping.main.ignore=yes

    --  When two objects have multiple associations between
	them, the SDK generated system returns only one of the
	associated object via the HTTP and Web Service
	interfaces. The generated Java API does return the
	correct instance.

    More detailed information is available in the caCORE
    Software Development Programmer's Guide, available at:

    http://nci.nih.gov/pub/cacore/SDK/caCORE_SDK3.2_Programmers_Guide.pdf


================================================================
	5.0 Bug Reports and Support
================================================================


    Send an email to ncicb@pop.nci.nih.gov to request support,
    or to report a bug.  

    In addition, mailing lists are used by the caCORE developer
    and user community to exchange ideas and make announcements.
    You can subscribe at these addresses:

    caCORE SDK users

    --  http://list.nih.gov/archives/cacore_sdk_users-l.html


================================================================
	6.0 caCORE Open Development
================================================================


    cacoresdk -- The NCICB caCORE Software Development Kit is
		 a set of tools designed to aid in the design
		 and creation of a 'caCORE-like' software
		 system.
     
    -- http://gforge.nci.nih.gov/projects/cacoresdk/
     

================================================================
	7.0 Documentation
================================================================

    
    The caCORE SDK Programmer's Guide can be downloaded via
    FTP:

    http://nci.nih.gov/pub/cacore/SDK/caCORE_SDK3.2.1_Programmers_Guide.pdf


================================================================
	8.0 NCICB Web Pages
================================================================


    The NCI Center for Bioinformatics

    --  http://ncicb.nci.nih.gov/
    
    NCICB Application Support
     
    --  http://ncicbsupport.nci.nih.gov/sw/

    NCICB Download Center

    --  http://ncicb.nci.nih.gov/download/

    caCORE SDK

    -- http://ncicb.nci.nih.gov/NCICB/infrastructure/cacoresdk
    -- http://gforge.nci.nih.gov/projects/cacoresdk/

    Common Security Module (CSM)
    
    --  http://ncicb.nci.nih.gov/NCICB/infrastructure/cacore_overview/csm

//end